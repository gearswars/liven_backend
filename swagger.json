{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "version": "1.0.0",
    "title": "Liven Test - backend",
    "contact": {
      "email": "gpelias@hotmail.com"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "login",
      "description": "Do user's login"
    },
    {
      "name": "address",
      "description": "User's endpoint"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/user/login": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "User's login",
        "description": "",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Login object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/address": {
      "post": {
        "tags": [
          "address"
        ],
        "summary": "Add an User's addresses",
        "description": "Create new address in a specific user ",
        "operationId": "createAddress",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT Token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Address object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address created"
          },
          "407": {
            "description": "Not authorization (not logged)"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "address"
        ],
        "summary": "Update an User's addresses",
        "description": "Update an address in a specific user ",
        "operationId": "updateAddress",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT Token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Address object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address_response"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address created"
          },
          "407": {
            "description": "Not authorization (not logged)"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "get": {
        "tags": [
          "address"
        ],
        "summary": "Return all logged User's address",
        "description": "",
        "operationId": "readAllAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Address list of object",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address_response"
              }
            }
          },
          "204": {
            "description": "User without any address"
          },
          "407": {
            "description": "Not authorization (not logged)"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/addresss/{id}": {
      "get": {
        "tags": [
          "address"
        ],
        "summary": "Return all logged User's address",
        "description": "",
        "operationId": "readOneAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT Token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "userId",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Address list of object",
            "schema": {
              "$ref": "#/definitions/Address_response"
            }
          },
          "204": {
            "description": "User without any address"
          },
          "407": {
            "description": "Not authorization (not logged)"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "address"
        ],
        "summary": "Delete User's address by id",
        "description": "address id",
        "operationId": "deleteAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete address by id"
          },
          "407": {
            "description": "Not authorization (not logged)"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add a new User",
        "description": "Create new user ",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT Token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Address object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created"
          },
          "407": {
            "description": "Not authorization (not logged)"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update an User",
        "description": "Update user",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT Token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User_response"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address created"
          },
          "407": {
            "description": "Not authorization (not logged)"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Return all User",
        "description": "",
        "operationId": "readAllUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Address list of object",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address_response"
              }
            }
          },
          "204": {
            "description": "Users not found"
          },
          "407": {
            "description": "Not authorization (not logged)"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Return one User by id",
        "description": "",
        "operationId": "readOneUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT Token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "userId",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User list of object",
            "schema": {
              "$ref": "#/definitions/Address_response"
            }
          },
          "204": {
            "description": "User not found"
          },
          "407": {
            "description": "Not authorization (not logged)"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete User by id",
        "description": "user id",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete user by id"
          },
          "407": {
            "description": "Not authorization (not logged)"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "jwt"
    }
  },
  "definitions": {
    "Login_body": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Address_body": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "Order Status"
        }
      }
    },
    "Address_response": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "address": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "Order Status"
        }
      }
    },
    "User_body": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "User_response": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address_response"
          }
        }
      }
    }
  }
}